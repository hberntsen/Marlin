
class CanvasWriter {
  constructor(canvas) {
    this.canvas = canvas;
    this.context = canvas.getContext("2d", { alpha: false });
    this.scale = 11;
    this.pixels_pad = 2;
    this.clear();
  }

  clear() {
    this.context.fillStyle = "white";
    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);
  }

  update(width, height, pixels) {
    this.canvas.width = (width + 2 * this.pixels_pad) * this.scale;
    this.canvas.height = (height + 2 * this.pixels_pad) * this.scale;
    this.clear();

    let x = 0;
    let y = 0;

    this.context.beginPath();
    for(const pixel of pixels) {
      if(pixel == '1') {
        this.context.rect((x + this.pixels_pad )*this.scale, (y + this.pixels_pad)*this.scale, this.scale - 1, this.scale - 1);
      }

      x+=1;
      if(x == width) {
        y+=1;
        x=0;
      }
    }
    this.context.fillStyle = "black";
    this.context.fill();
  }

};

let connectButton = document.getElementById('connect');
let screenshotButton = document.getElementById('screenshot');
let continuousScreenshot = document.getElementById('continuous_screenshot');
let canvas = new CanvasWriter(document.getElementById('screen'));

canvas.update
let port = null;

async function connect() {
  port = await navigator.serial.requestPort();
  await port.open({'baudRate': 115200});

  //while (port.readable) {
      const decoder = new TextDecoderStream();
      const reader = port.readable.pipeThrough(new TextDecoderStream()).getReader();
      //console.log(reader);
      //for ( const chunk of reader) {
        //console.log("Chunk", chunk);
      //}
      //const decoder = new TextDecoder();
      let buffer = "";

      // decoder state
      let state = "WAIT_P1";
      let screen_size;
      let pixels = "";

      while (true) {
        const { value, done } = await reader.read();
        if (done) {
          // |reader| has been canceled.
          break;
        }
        buffer += value;

        let lines = buffer.split('\n');
        if (lines.length > 0) {
          for (const line of lines.slice(0, -1)) {
            console.log("Serial: ", line);

            if(state === "RECV_IMG_DATA") {
              pixels += line.replace(" ", "").replace("ok","");
              if(pixels.length >= screen_size[0]*screen_size[1]) {
                console.log("Pixels length", pixels.length);
                console.log("Pixels", pixels);
                canvas.update(screen_size[0], screen_size[1], pixels);
                pixels = "";
                state = "WAIT_P1";
                if(continuousScreenshot.checked) {
                  requestScreenshot();
                }
              }
            }
            if(state === "WAIT_SIZE") {
              screen_size = line.split(' ').map(Number);
              state = "RECV_IMG_DATA";
            }
            if(line === "P1") {
              state = "WAIT_SIZE";
            }
            buffer = lines[lines.length - 1];
          }
        }
        //console.log("Serial: ", decoder.decode(value));
      }
  //}
}

async function requestScreenshot(now) {
  if(port) {
    const encoder = new TextEncoder();
    const writer = port.writable.getWriter();
    try {
      const cmd = `M257${now ? ' N1' : ''}\n`;
      console.log(cmd);
      await writer.write(encoder.encode(cmd));
    } finally {
      writer.releaseLock();
    }
  }
}


connectButton.addEventListener("click", () => {
  connect();
});

screenshotButton.addEventListener("click", () => {
  requestScreenshot(true);
});
